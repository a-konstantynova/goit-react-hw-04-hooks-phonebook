{"version":3,"sources":["components/Section/Section.module.css","components/Form/Form.module.css","components/Form/Form.js","components/Section/Section.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","App.module.css"],"names":["module","exports","Form","onSubmit","useState","name","setName","number","setNumber","id","setId","handleChange","event","currentTarget","value","shortid","generate","resetForm","className","s","form__container","preventDefault","label","name__input","input","type","pattern","title","required","onChange","add__btn","Section","children","container","ContactsList","contactsList","onDeleteContact","list","map","item","deleteBtn","onClick","Filter","App","contacts","setContacts","filter","setFilter","useEffect","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","data","some","contact","toLowerCase","alert","prevState","title_contacts","e","normalizedFilter","includes","getFilteredContact","contactId","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.4bef8713.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__1zNMm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__container\":\"Form_form__container__1pmTY\",\"label\":\"Form_label__24BCM\",\"input\":\"Form_input__1PvcT\",\"add__btn\":\"Form_add__btn__2oaBI\",\"name__input\":\"Form_name__input__2UwFJ\"};","import { useState } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport s from './Form.module.css';\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [id, setId] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setId(shortid.generate());\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ id, name, number });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n    setId('');\n  };\n\n  return (\n    <form className={s.form__container} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        <span className={s.name__input}>Name</span>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире\n          и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de\n          Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        <span className={s.name__input}>Number</span>\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.add__btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <div className={s.container}>\n      {title && <h2 className=\"title\">{title}</h2>}\n\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport s from './ContactsList.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function ContactsList({ contactsList, onDeleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contactsList.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          {name}: {number}\n          <button className={s.deleteBtn} onClick={() => onDeleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactsList.propTypes = {\n  contactsList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.label}>\n    <span className={s.title}>Find contacts by name</span>\n    <input className={s.input} type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from './components/Form';\nimport Section from './components/Section';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\n\nimport s from './App.module.css';\n\n// [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ];\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    setContacts(parsedContacts);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formOnSubmitHandler = data => {\n    contacts.some(\n      contact => contact.name.toLowerCase() === data.name.toLowerCase(),\n    )\n      ? alert(`${data.name} is already in contacts.`)\n      : setContacts(prevState => [...prevState, data]);\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getFilteredContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevState =>\n      prevState.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      <Section>\n        <Form onSubmit={formOnSubmitHandler} />\n      </Section>\n      <h2 className={s.title_contacts}>Contacts</h2>\n      <Section>\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactsList\n          contactsList={getFilteredContact()}\n          onDeleteContact={deleteContact}\n        />\n      </Section>\n    </div>\n  );\n}\n\nApp.propTypes = {\n  filter: PropTypes.string,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__12rOD\",\"deleteBtn\":\"ContactsList_deleteBtn__1siRL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__mQM7A\",\"input\":\"Filter_input__ssfIn\",\"title\":\"Filter_title__2S9ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2yP_U\",\"title\":\"App_title__396mn\"};"],"sourceRoot":""}